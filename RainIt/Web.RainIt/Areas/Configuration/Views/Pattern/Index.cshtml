@using Newtonsoft.Json
@model List<RainIt.Domain.DTO.PatternDTO>
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "All Patterns";
}
<style>
#gallery {
    position: relative;
    /*width: 880px;*/
}
#gallery .image-holder, #gallery .image-adder {
    width: 200px;
    position: absolute;
}
.delete-button
{
    display:block;
    position:relative;
    top:10px;
    right:0px;
    width:27px;
    height:27px;
    background:url('http://cdn-sg1.pgimgs.com/images/pg/close-button.png') no-repeat center center;
    margin-left: 180px;
}
</style>

<div class="container">
    <div id="gallery" class="row">
        <img id="addImage" src="/Content/addimageicon.png" alt="Add an image" class="image-holder col-md-4">
    </div>
</div>
<script src="~/Scripts/jquery.shapeshift.js"></script>
<script type="text/javascript">
    (function() {
        this.PatternIndexProperties = this.PatternIndexProperties || {};

        var passedImages = @Html.Raw(JsonConvert.SerializeObject(Model));

        PatternIndexProperties.Gallery = (function() {
            var properties = {};
            function createImage(image) {
                var imageToPlace = $('<img>').attr("id", "image" + image.PatternId).attr("src", image.Path).attr("class", "img-responsive");
                var imageHolder = $('<div>').attr("class", "image-holder col-md-4").attr("id", "image-holder_" + image.PatternId);
                var deleteButton = $('<div>').attr("class", "delete-button").attr("id", "delete_" + image.PatternId);
                deleteButton.appendTo(imageHolder);
                imageToPlace.appendTo(imageHolder);
                return imageHolder;
            }
            function initializeUserImages() {
                $.each(passedImages, function(index, imageData) {
                    var imageAdder = $('#addImage');
                    var image = createImage(imageData);
                    image.insertBefore(imageAdder);
                });
            }

            function addBootstrapClearFixes() {
                var bootstrapSizes = ['xs', 'sm', 'md', 'lg'];
                $.each(bootstrapSizes, function(index, currentSize) {
                    debugger;
                    var columnClassRegex = new RegExp("col-" + currentSize + "-([1-9]|1[0-2])");
                    var cumulativeColumnWidth = 0;
                    $('#gallery .image-holder').each(function() {
                        var currentColumnClass = columnClassRegex.exec($(this).attr('class'));
                        if (currentColumnClass != null) {
                            var currentColumnWidth = currentColumnClass[0].split('-')[2];
                            cumulativeColumnWidth += Number(currentColumnWidth);
                            if (cumulativeColumnWidth > 12) {
                                var clearFixBlock = $('div').attr('class', 'clearfix visible-' + currentSize + '-block');
                                clearFixBlock.insertBefore($(this));
                                cumulativeColumnWidth = Number(currentColumnWidth);
                            }    
                        }
                    });
                });
                
            }

            properties.Parameters = {
                enableDrag: true,
                cutoffEnd: passedImages.length - 1,
                enableCrossDrop: false
            };
            properties.Initialize = function() {
                initializeUserImages();
                addBootstrapClearFixes();
                $('#gallery').shapeshift(properties.Parameters);
            }
            properties.Update = function(newParameters) {
                $('#gallery').shapeshift(newParameters);
            }
            properties.DeleteImageAdder = function() {
                $('#addImage').remove();
            }
            return properties;
        }());

        var addImage = (function() {
            var properties = {};
            function onAjaxSuccess(data) {
                $('#mainBody').html(data);
            }
            function onAjaxError() {
                alert("something happened");
            }
            function makeAddAjaxCall() {
                $.ajax({
                    url: '@Url.Action("Add", "Pattern", new {area = "Configuration"}, null)',
                    success: onAjaxSuccess,
                    error: onAjaxError,
                    dataType: 'html'
                });
            }
            properties.AddClickListener = function() {
                $('#addImage').click(function() {
                    makeAddAjaxCall();
                });
            }
            return properties;
        }());

        var deleteButton = (function() {
            var properties = {};

            function onAjaxSuccess(data) {
                window.location.href = data;
            }
            function makeDeleteAjaxCall(patternToDelete) {
                $.post(
                    "@Url.Action("Delete", "Pattern", new { area = "Configuration" }, null)",
                    { patternId: patternToDelete },
                    onAjaxSuccess
                );
            }

            properties.AddClickListener = function() {
                $('.delete-button').click(function(e) {
                    var patternToDelete = $(e.target).attr("id").split("_")[1];
                    makeDeleteAjaxCall(patternToDelete);
                });
            }
            return properties;
        }());
        
        PatternIndexProperties.SetupPage = function() {
            PatternIndexProperties.Gallery.Initialize();
            addImage.AddClickListener();
            deleteButton.AddClickListener();
        };
    }());

    $(document).ready(function() {
        PatternIndexProperties.SetupPage();
    });
</script>