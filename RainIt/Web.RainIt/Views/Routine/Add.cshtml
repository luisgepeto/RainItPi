@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Add Routine";
}
@using Newtonsoft.Json
@model RainIt.Domain.DTO.RoutineDTO
<style>
    #routineBuilder {
        position: relative;
        width: 880px;
        height: 500px;
    }

        #routineBuilder .image-holder {
            height: 200px;
            width: 200px;
            position: absolute;
        }

    #gallery .delete-button {
        display: none;
    }
</style>
<div class="container" style="margin-top: 200px">
    <div id="routineBuilder">
        <img id="addImage2" src="/Content/addimageicon.png" alt="Add an image" class="image-holder">
    </div>
    <input type="button" value="Add" name="Add" id="addRoutine" />
</div>
@Html.Action("Index", "Pattern")
<script type="text/javascript">
    (function () {
        this.RoutineAddProperties = this.RoutineAddProperties || {};
        var passedImages = '@Html.Raw(Model != null ? JsonConvert.SerializeObject(Model.RoutinePatternDTOs) : null)';

        var deleteButton = (function () {
            var properties = {};
            function removeListeners() {
                $('.delete-button').off();
            }
            function addClickListener() {
                $('.delete-button').click(function (e) {
                    $(e.currentTarget).parent().detach();
                    $('#routineBuilder').shapeshift({
                        enableDrag: true,
                        enableCrossDrop: true
                    });
                });
            }
            properties.Initialize = function () {
                removeListeners();
                addClickListener();
            }
            return properties;
        }());

        var routineBuilder = (function () {
            var properties = {};
            function createImage(image) {
                var imageToPlace = $('<img>').attr("id", "image" + image.PatternDTO.PatternId).attr("src", image.PatternDTO.Path);
                var imageHolder = $('<div>').attr("class", "image-holder").attr("id", "image-holder_" + image.PatternDTO.PatternId);
                var deleteButton = $('<div>').attr("class", "delete-button").attr("id", "delete_" + image.PatternDTO.PatternId);
                deleteButton.appendTo(imageHolder);
                imageToPlace.appendTo(imageHolder);
                return imageHolder;
            }
            function initializeUserImages(passedImagesArray) {
                $.each(passedImagesArray, function (index, imageData) {
                    var imageAdder = $('#addImage2');
                    var image = createImage(imageData);
                    image.insertBefore(imageAdder);
                });
            }
            function addDropEventListener() {
                $('#routineBuilder').on('ss-drop-complete', function () {
                    deleteButton.Initialize();
                });
            }
            properties.Initialize = function () {
                if (passedImages != '') {
                    initializeUserImages(JSON.parse(passedImages));
                }
                $('#routineBuilder').shapeshift({
                    enableDrag: true,
                    enableCrossDrop: true
                });
                addDropEventListener();
            }
            return properties;
        }());

        var galleryExtender = (function () {
            var properties = {};
            var oldParameters = PatternIndexProperties.Gallery.Parameters;
            var newParameters = {
                enableDrag: true,
                dragClone: true
            }

            properties.Initialize = function () {
                $.extend(oldParameters, newParameters);
                PatternIndexProperties.Gallery.Update(oldParameters);
                PatternIndexProperties.Gallery.DeleteImageAdder();
            }
            return properties;
        }());



        var addRoutine = (function () {
            var properties = {};

            function getPatternIdList() {
                var patternIdArrayList = [];
                $('#routineBuilder').children().each(function () {
                    var currentElement = $(this);
                    if (currentElement.attr("id").match("^image-holder_")) {
                        patternIdArrayList.push(currentElement.attr("id").split("_")[1]);
                    }
                });
                return patternIdArrayList;
            }

            function onAjaxSuccess(data) {
                window.location.href = data;
            }

            function makeAddPatternAjaxCall(patternIdList) {
                $.ajax({
                    url: '@Url.Action("Add", "Routine")',
                    data: {
                        routineId: '@Html.Raw(Model != null ? Model.RoutineId : 0)',
                        patternIdList: patternIdList
                    },
                    type: "POST",
                    contentType: "application/x-www-form-urlencoded",
                    success: onAjaxSuccess
                });
            }

            properties.AddClickListener = function () {
                $('#addRoutine').click(function () {
                    var patternIdList = getPatternIdList();
                    makeAddPatternAjaxCall(patternIdList);
                });
            }
            return properties;
        }());

        RoutineAddProperties.SetupPage = function () {
            routineBuilder.Initialize();
            galleryExtender.Initialize();
            addRoutine.AddClickListener();
            deleteButton.Initialize();
        }
    }());
    $(document).ready(function () {
        RoutineAddProperties.SetupPage();
    });
</script>
